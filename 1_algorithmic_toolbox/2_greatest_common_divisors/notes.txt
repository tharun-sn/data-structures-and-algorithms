Defenition:
  For integers a and b, their GCD is the largest number d so that d divides both a and b

Naive algorithm:

best = 0
for d from 1 to a+b:
  if d divides a and d divides b  
    best = d
return best

Key Lemma:
  Let a' be the remainder when a is divided by b,
  then
    gcd(a,b) = gcd(a',b) = gcd(a,b')

Proof (sketch):
a = a′ + bq for some q
d divides a and b if and only if it divides a′and b

Function EuclidGCD(a, b)
  if b = 0:
    return a
  a′ ← the remainder when a is divided by b
  return EuclidGCD(b, a′)

Example:
gcd(3918848, 1653264)
= gcd(1653264, 612320)
= gcd(612320, 428624)
= gcd(428624, 183696)
= gcd(183696, 61232)
= gcd(61232, 0)